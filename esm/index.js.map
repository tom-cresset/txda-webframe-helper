{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["const initialize = (origins: string[]): Promise<MessagePort> =>\n  new Promise((resolve, reject) => {\n    if (origins.includes('*')) {\n      reject('Specific target origins must be specified to connect to TXDA installs')\n    }\n\n    // Listen for events from TXDA for initial setup of MessagePort\n    window.addEventListener('message', event => {\n      if (event.data?.messageType === 'txdaMessagePortTransfer') {\n        if (!origins.includes(event.origin)) {\n          reject('Attempted TXDA connection event from unauthorized origin')\n        }\n\n        const port = event.ports[0]\n        resolve(port)\n      }\n    })\n\n    window.parent.postMessage({\n      messageType: 'txdaConnectionRequest',\n      windowName: window.name,\n    }, origin)\n  })\n\nexport { initialize }\n"],
  "mappings": "AAAA,GAAM,GAAa,AAAC,GAClB,GAAI,SAAQ,CAAC,EAAS,IAAW,CAC/B,AAAI,EAAQ,SAAS,MACnB,EAAO,yEAIT,OAAO,iBAAiB,UAAW,GAAS,CAC1C,GAAI,EAAM,MAAM,cAAgB,0BAA2B,CACzD,AAAK,EAAQ,SAAS,EAAM,SAC1B,EAAO,4DAGT,GAAM,GAAO,EAAM,MAAM,GACzB,EAAQ,MAIZ,OAAO,OAAO,YAAY,CACxB,YAAa,wBACb,WAAY,OAAO,MAClB",
  "names": []
}
