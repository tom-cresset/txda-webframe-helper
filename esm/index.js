var p=(a,s={})=>new Promise((o,n)=>{a==="*"&&n("Specific target origins must be specified to connect to TXDA installs"),window.addEventListener("message",i=>{if(i.data?.messageType==="txdaMessagePortTransfer"){i.origin!==a&&n("Attempted TXDA connection event from unauthorized origin");let e=i.ports[0];e.addEventListener("message",t=>console.log(t)),s._message&&e.addEventListener("message",t=>{s._message?.(t)}),s.connectionEstablished&&e.addEventListener("message",t=>{t.data?.messageType==="txdaConnectionAcknowledgement"&&s.connectionEstablished?.()}),s.updateCurrentDesign&&e.addEventListener("message",t=>{if(t.data?.messageType==="txdaCurrentDesign"){let{metaData:r,data:g}=t.data;s.updateCurrentDesign?.(g,r)}}),e.start(),e.postMessage({messageType:"txdaRequestCurrentDesign"}),o({port:e,requestCurrentDesign:()=>e.postMessage({messageType:"txdaRequestCurrentDesign"})})}}),window.parent.postMessage({messageType:"txdaConnectionRequest",windowName:window.name},a),setTimeout(()=>{n("Connection to TXDA failed (timed out)")},1e4)});export{p as initialize};
//# sourceMappingURL=index.js.map
